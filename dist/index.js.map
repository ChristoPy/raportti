{"version":3,"sources":["report.js","wrappers.js","index.js"],"names":["report","baseHeaders","headers","Accept","method","data","baseURL","fetch","body","JSON","stringify","catch","res","console","log","oldInfo","info","oldWarn","warn","oldError","error","getStackTrace","stackTrace","Error","stack","split","splice","map","trace","trim","informationWrapper","name","type","stacktrace","timestamp","Date","now","arguments","warningWrapper","exceptionWrapper","wrapInfo","wrapWarn","wrapError","setBaseURL","URLToSet","lookupTable","main","options","Object","keys","forEach","key","methodIsDefined"],"mappings":"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","file":"index.js","sourceRoot":"../src","sourcesContent":["const baseHeaders = {\n  headers: {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  },\n  method: 'POST',\n}\n\nconst report = (data, baseURL) => {\n  fetch(baseURL, { ...baseHeaders, body: JSON.stringify(data) })\n    .catch((res) => { console.log(res) })\n};\n\nexport default report;\n","import report from './report'\n\nconst oldInfo = console.info\nconst oldWarn = console.warn\nconst oldError = console.error\n\nlet baseURL\n\nconst getStackTrace = () => {\n  let stackTrace\n\n  try {\n    throw new Error('==raportti==')\n  } catch (error) {\n    stackTrace = error.stack\n  }\n\n  stackTrace = stackTrace.split('\\n')\n  stackTrace.splice(0, 2)\n  return stackTrace.map((trace) => trace.trim())\n}\n\nfunction informationWrapper(name) {\n  report({\n    name,\n    type: 'information',\n    stacktrace: getStackTrace(),\n    timestamp: Date.now(),\n  }, baseURL)\n  oldInfo(...arguments)\n}\n\nfunction warningWrapper(name) {\n  report({\n    name,\n    type: 'warning',\n    stacktrace: getStackTrace(),\n    timestamp: Date.now(),\n  }, baseURL)\n  oldWarn(...arguments);\n}\n\nfunction exceptionWrapper(name) {\n  report({\n    name,\n    type: 'error',\n    stacktrace: getStackTrace(),\n    timestamp: Date.now(),\n  }, baseURL)\n  oldError(...arguments)\n}\n\nexport const wrapInfo = () => {\n  console.info = informationWrapper\n}\n\nexport const wrapWarn = () => {\n  console.warn = warningWrapper\n}\n\nexport const wrapError = () => {\n  console.error = exceptionWrapper\n}\n\nexport const setBaseURL = (URLToSet) => {\n  baseURL = URLToSet\n}\n","import {\n  wrapError,\n  wrapWarn,\n  wrapInfo,\n  setBaseURL,\n} from './wrappers'\n\nconst lookupTable = {\n  error: wrapError,\n  warn: wrapWarn,\n  info: wrapInfo,\n}\n\nexport default function main(baseURL, options) {\n  setBaseURL(baseURL)\n\n  Object.keys(options).forEach((key) => {\n    const methodIsDefined = lookupTable[key]\n\n    if (methodIsDefined) {\n      methodIsDefined()\n    }\n  })\n}\n"]}